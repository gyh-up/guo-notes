import{_ as s,c as n,o as a,a as l}from"./app.b42c6d4f.js";const b=JSON.parse('{"title":"\u95EE\u9898\uFF1A\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u65B9\u6CD5\u4E00\uFF1A\u54C8\u5E0C\u8868","slug":"\u65B9\u6CD5\u4E00\uFF1A\u54C8\u5E0C\u8868","link":"#\u65B9\u6CD5\u4E00\uFF1A\u54C8\u5E0C\u8868","children":[]},{"level":2,"title":"\u65B9\u6CD5\u4E8C\uFF1A\u5FAA\u73AF","slug":"\u65B9\u6CD5\u4E8C\uFF1A\u5FAA\u73AF","link":"#\u65B9\u6CD5\u4E8C\uFF1A\u5FAA\u73AF","children":[]},{"level":2,"title":"\u65B9\u6CD5\u4E09\uFF1A\u5FEB\u6162\u6307\u9488","slug":"\u65B9\u6CD5\u4E09\uFF1A\u5FEB\u6162\u6307\u9488","link":"#\u65B9\u6CD5\u4E09\uFF1A\u5FEB\u6162\u6307\u9488","children":[]}],"relativePath":"classify/algorithm/title/\u5251\u6307Offer-22.md","lastUpdated":1668581593000}'),p={name:"classify/algorithm/title/\u5251\u6307Offer-22.md"},e=l(`<h1 id="\u95EE\u9898\uFF1A\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9" tabindex="-1">\u95EE\u9898\uFF1A\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9 <a class="header-anchor" href="#\u95EE\u9898\uFF1A\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9" aria-hidden="true">#</a></h1><p><a href="/guo-notes/classify/algorithm/\u57FA\u7840\u6570\u636E\u7ED3\u6784-\u54C8\u5E0C\u8868.html">\u54C8\u5E0C\u8868</a> | <a href="/guo-notes/classify/algorithm/\u57FA\u7840\u6570\u636E\u7ED3\u6784-\u94FE\u8868.html">\u94FE\u8868</a> | <a href="/guo-notes/classify/algorithm/\u6280\u5DE7-\u53CC\u6307\u9488.html">\u53CC\u6307\u9488</a></p><p>\u8F93\u5165\u4E00\u4E2A\u94FE\u8868\uFF0C\u8F93\u51FA\u8BE5\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9\u3002\u4E3A\u4E86\u7B26\u5408\u5927\u591A\u6570\u4EBA\u7684\u4E60\u60EF\uFF0C\u672C\u9898\u4ECE1\u5F00\u59CB\u8BA1\u6570\uFF0C\u5373\u94FE\u8868\u7684\u5C3E\u8282\u70B9\u662F\u5012\u6570\u7B2C1\u4E2A\u8282\u70B9\u3002</p><p>\u4F8B\u5982\uFF0C\u4E00\u4E2A\u94FE\u8868\u6709 6 \u4E2A\u8282\u70B9\uFF0C\u4ECE\u5934\u8282\u70B9\u5F00\u59CB\uFF0C\u5B83\u4EEC\u7684\u503C\u4F9D\u6B21\u662F 1\u30012\u30013\u30014\u30015\u30016\u3002\u8FD9\u4E2A\u94FE\u8868\u7684\u5012\u6570\u7B2C 3 \u4E2A\u8282\u70B9\u662F\u503C\u4E3A 4 \u7684\u8282\u70B9\u3002</p><p><strong>\u793A\u4F8B\uFF1A</strong></p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">\u7ED9\u5B9A\u4E00\u4E2A\u94FE\u8868: 1-&gt;2-&gt;3-&gt;4-&gt;5, \u548C k = 2.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">\u8FD4\u56DE\u94FE\u8868 4-&gt;5.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="\u65B9\u6CD5\u4E00\uFF1A\u54C8\u5E0C\u8868" tabindex="-1">\u65B9\u6CD5\u4E00\uFF1A\u54C8\u5E0C\u8868 <a class="header-anchor" href="#\u65B9\u6CD5\u4E00\uFF1A\u54C8\u5E0C\u8868" aria-hidden="true">#</a></h2><p>\u521B\u5EFA\u4E00\u4E2A\u54C8\u5E0C\u8868\uFF0C\u7528\u6765\u4FDD\u5B58\u5F53\u524D\u8282\u70B9\u7684\u4F4D\u7F6E\u548C\u8282\u70B9\u672C\u8EAB\u3002\u65F6\u95F4\u590D\u6742\u5EA6\u548C\u7A7A\u95F4\u590D\u6742\u5EA6\u5747\u4E3A O(n)</p><div class="language-go line-numbers-mode"><button class="copy"></button><span class="lang">go</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for singly-linked list.</span></span>
<span class="line"><span style="color:#676E95;"> * type ListNode struct {</span></span>
<span class="line"><span style="color:#676E95;"> *     Val int</span></span>
<span class="line"><span style="color:#676E95;"> *     Next *ListNode</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getKthFromEnd</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> k </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">// \u7279\u6B8A\u60C5\u51B5</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> head </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">// \u521B\u5EFA\u54C8\u5E0C\u8868</span></span>
<span class="line"><span style="color:#A6ACCD;">    nodeMap </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">make</span><span style="color:#89DDFF;">(map[</span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">]*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">// \u4FDD\u5B58\u94FE\u8868\u957F\u5EA6</span></span>
<span class="line"><span style="color:#A6ACCD;">    i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> head </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        nodeMap</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> head</span></span>
<span class="line"><span style="color:#A6ACCD;">        head </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next</span></span>
<span class="line"><span style="color:#A6ACCD;">        i</span><span style="color:#89DDFF;">++</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">// \u5012\u6570\u7B2Ck\u4E2A\u6307\u9488\uFF0C\u5373\u4E3A\u6B63\u6570\u7B2C i-k</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> nodeMap</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">k</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="\u65B9\u6CD5\u4E8C\uFF1A\u5FAA\u73AF" tabindex="-1">\u65B9\u6CD5\u4E8C\uFF1A\u5FAA\u73AF <a class="header-anchor" href="#\u65B9\u6CD5\u4E8C\uFF1A\u5FAA\u73AF" aria-hidden="true">#</a></h2><p>\u5B9E\u9645\u903B\u8F91\u8DDF\u65B9\u6CD5\u4E00\u662F\u4E00\u6837\u7684\uFF0C\u53EA\u662F\u7528\u4E86\u4E24\u4E2A\u5FAA\u73AF\uFF0C\u628A\u7A7A\u95F4\u590D\u6742\u5EA6\u53D8\u6210 O(1)</p><div class="language-go line-numbers-mode"><button class="copy"></button><span class="lang">go</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for singly-linked list.</span></span>
<span class="line"><span style="color:#676E95;"> * type ListNode struct {</span></span>
<span class="line"><span style="color:#676E95;"> *     Val int</span></span>
<span class="line"><span style="color:#676E95;"> *     Next *ListNode</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">getKthFromEnd</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> k </span><span style="color:#C792EA;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">// \u7279\u6B8A\u60C5\u51B5</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> head </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    ptr </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> head</span></span>
<span class="line"><span style="color:#A6ACCD;">    i </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">// \u5FAA\u73AF\u8BA1\u7B97\u94FE\u8868\u957F\u5EA6</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> head </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        head </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> head</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next</span></span>
<span class="line"><span style="color:#A6ACCD;">        i</span><span style="color:#89DDFF;">++</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;">// \u5012\u6570\u7B2Ck\u4E2A\u6307\u9488\uFF0C\u5373\u4E3A\u6B63\u6570\u7B2C i-k</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">for</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">:=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;">k </span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> j</span><span style="color:#89DDFF;">++</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        ptr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> ptr</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Next</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> ptr</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h2 id="\u65B9\u6CD5\u4E09\uFF1A\u5FEB\u6162\u6307\u9488" tabindex="-1">\u65B9\u6CD5\u4E09\uFF1A\u5FEB\u6162\u6307\u9488 <a class="header-anchor" href="#\u65B9\u6CD5\u4E09\uFF1A\u5FEB\u6162\u6307\u9488" aria-hidden="true">#</a></h2><p>\u521B\u5EFA\u5FEB\u6162\u4E24\u4E2A\u6307\u9488\uFF0C\u5176\u4E2D\u5FEB\u6307\u9488\u5148\u79FB\u52A8 k-1 \u4E2A\u4F4D\u7F6E\uFF0C\u7136\u540E\u5FEB\u6162\u6307\u9488\u518D\u540C\u65F6\u79FB\u52A8\uFF0C\u5F53\u5FEB\u6307\u9488\u5230\u8FBE\u6700\u540E\u7684\u8282\u70B9\u65F6\uFF0C\u6162\u6307\u9488\u521A\u597D\u5230\u8FBE\u5012\u6570\u7B2C k \u4E2A\u8282\u70B9\u7684\u4F4D\u7F6E\u3002</p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">/**</span></span>
<span class="line"><span style="color:#A6ACCD;"> * Definition for singly-linked list.</span></span>
<span class="line"><span style="color:#A6ACCD;"> * type ListNode struct {</span></span>
<span class="line"><span style="color:#A6ACCD;"> *     Val int</span></span>
<span class="line"><span style="color:#A6ACCD;"> *     Next *ListNode</span></span>
<span class="line"><span style="color:#A6ACCD;"> * }</span></span>
<span class="line"><span style="color:#A6ACCD;"> */</span></span>
<span class="line"><span style="color:#A6ACCD;">func getKthFromEnd(head *ListNode, k int) *ListNode {</span></span>
<span class="line"><span style="color:#A6ACCD;">	// \u521B\u5EFA\u5FEB\u6162\u6307\u9488</span></span>
<span class="line"><span style="color:#A6ACCD;">    fastPtr, slowPtr := head, head</span></span>
<span class="line"><span style="color:#A6ACCD;">    // \u5FEB\u6307\u9488\u5148\u540E\u79FB k-1 \u4E2A\u4F4D\u7F6E</span></span>
<span class="line"><span style="color:#A6ACCD;">    for i := 0; i &lt; k - 1; i++ {</span></span>
<span class="line"><span style="color:#A6ACCD;">        fastPtr = fastPtr.Next</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">	// \u5FEB\u6162\u6307\u9488\u4E00\u8D77\u79FB\u52A8</span></span>
<span class="line"><span style="color:#A6ACCD;">    for fastPtr.Next != nil {</span></span>
<span class="line"><span style="color:#A6ACCD;">        fastPtr, slowPtr = fastPtr.Next, slowPtr.Next</span></span>
<span class="line"><span style="color:#A6ACCD;">    }</span></span>
<span class="line"><span style="color:#A6ACCD;">    return slowPtr</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div>`,15),o=[e];function r(c,t,i,D,y,A){return a(),n("div",null,o)}const F=s(p,[["render",r]]);export{b as __pageData,F as default};
