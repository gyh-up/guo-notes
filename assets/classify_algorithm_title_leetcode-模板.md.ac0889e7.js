import{_ as s,c as n,o as a,a as l}from"./app.6bd15930.js";const h=JSON.parse('{"title":"\u95EE\u9898\uFF1A\u73AF\u5F62\u94FE\u8868","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u65B9\u6CD5\u4E00\uFF1A\u904D\u5386\u6CD5/\u54C8\u5E0C\u8868","slug":"\u65B9\u6CD5\u4E00\uFF1A\u904D\u5386\u6CD5-\u54C8\u5E0C\u8868","link":"#\u65B9\u6CD5\u4E00\uFF1A\u904D\u5386\u6CD5-\u54C8\u5E0C\u8868","children":[]},{"level":2,"title":"*\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488","slug":"\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488","link":"#\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488","children":[]}],"relativePath":"classify/algorithm/title/leetcode-\u6A21\u677F.md","lastUpdated":1668581593000}'),e={name:"classify/algorithm/title/leetcode-\u6A21\u677F.md"},p=l(`<h1 id="\u95EE\u9898\uFF1A\u73AF\u5F62\u94FE\u8868" tabindex="-1">\u95EE\u9898\uFF1A\u73AF\u5F62\u94FE\u8868 <a class="header-anchor" href="#\u95EE\u9898\uFF1A\u73AF\u5F62\u94FE\u8868" aria-hidden="true">#</a></h1><p><a href="/guo-notes/classify/algorithm/\u57FA\u7840\u6570\u636E\u7ED3\u6784-\u54C8\u5E0C\u8868.html">\u54C8\u5E0C\u8868</a> | <a href="/guo-notes/classify/algorithm/\u57FA\u7840\u6570\u636E\u7ED3\u6784-\u94FE\u8868.html">\u94FE\u8868</a> | <a href="/guo-notes/classify/algorithm/\u6280\u5DE7-\u53CC\u6307\u9488.html">\u53CC\u6307\u9488</a> | <a href="/guo-notes/classify/algorithm/\u6570\u5B66-\u76F8\u9047\u95EE\u9898.html">\u76F8\u9047\u95EE\u9898</a></p><p>\u7ED9\u4F60\u4E00\u4E2A\u94FE\u8868\u7684\u5934\u8282\u70B9 head \uFF0C\u5224\u65AD\u94FE\u8868\u4E2D\u662F\u5426\u6709\u73AF\u3002</p><p>\u5982\u679C\u94FE\u8868\u4E2D\u6709\u67D0\u4E2A\u8282\u70B9\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8FDE\u7EED\u8DDF\u8E2A next \u6307\u9488\u518D\u6B21\u5230\u8FBE\uFF0C\u5219\u94FE\u8868\u4E2D\u5B58\u5728\u73AF\u3002 \u4E3A\u4E86\u8868\u793A\u7ED9\u5B9A\u94FE\u8868\u4E2D\u7684\u73AF\uFF0C\u8BC4\u6D4B\u7CFB\u7EDF\u5185\u90E8\u4F7F\u7528\u6574\u6570 pos \u6765\u8868\u793A\u94FE\u8868\u5C3E\u8FDE\u63A5\u5230\u94FE\u8868\u4E2D\u7684\u4F4D\u7F6E\uFF08\u7D22\u5F15\u4ECE 0 \u5F00\u59CB\uFF09\u3002\u6CE8\u610F\uFF1Apos \u4E0D\u4F5C\u4E3A\u53C2\u6570\u8FDB\u884C\u4F20\u9012 \u3002\u4EC5\u4EC5\u662F\u4E3A\u4E86\u6807\u8BC6\u94FE\u8868\u7684\u5B9E\u9645\u60C5\u51B5\u3002</p><h2 id="\u65B9\u6CD5\u4E00\uFF1A\u904D\u5386\u6CD5-\u54C8\u5E0C\u8868" tabindex="-1">\u65B9\u6CD5\u4E00\uFF1A\u904D\u5386\u6CD5/\u54C8\u5E0C\u8868 <a class="header-anchor" href="#\u65B9\u6CD5\u4E00\uFF1A\u904D\u5386\u6CD5-\u54C8\u5E0C\u8868" aria-hidden="true">#</a></h2><p>\u3002\u3002\u3002</p><div class="language-go line-numbers-mode"><button class="copy"></button><span class="lang">go</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for singly-linked list.</span></span>
<span class="line"><span style="color:#676E95;"> * type ListNode struct {</span></span>
<span class="line"><span style="color:#676E95;"> *     Val int</span></span>
<span class="line"><span style="color:#676E95;"> *     Next *ListNode</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hasCycle</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488" tabindex="-1">*\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488 <a class="header-anchor" href="#\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488" aria-hidden="true">#</a></h2><p>\u3002\u3002\u3002</p><div class="language-go line-numbers-mode"><button class="copy"></button><span class="lang">go</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for singly-linked list.</span></span>
<span class="line"><span style="color:#676E95;"> * type ListNode struct {</span></span>
<span class="line"><span style="color:#676E95;"> *     Val int</span></span>
<span class="line"><span style="color:#676E95;"> *     Next *ListNode</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hasCycle</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,10),o=[p];function r(c,t,i,d,y,b){return a(),n("div",null,o)}const m=s(e,[["render",r]]);export{h as __pageData,m as default};
