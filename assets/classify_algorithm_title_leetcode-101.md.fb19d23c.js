import{_ as s,c as n,o as a,a as l}from"./app.7ba48979.js";const F=JSON.parse('{"title":"\u95EE\u9898\uFF1A\u5BF9\u79F0\u4E8C\u53C9\u6811","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u65B9\u6CD5\u4E00\uFF1A\u9012\u5F52","slug":"\u65B9\u6CD5\u4E00\uFF1A\u9012\u5F52","link":"#\u65B9\u6CD5\u4E00\uFF1A\u9012\u5F52","children":[]},{"level":2,"title":"*\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488","slug":"\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488","link":"#\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488","children":[]}],"relativePath":"classify/algorithm/title/leetcode-101.md","lastUpdated":1669029012000}'),p={name:"classify/algorithm/title/leetcode-101.md"},e=l(`<h1 id="\u95EE\u9898\uFF1A\u5BF9\u79F0\u4E8C\u53C9\u6811" tabindex="-1">\u95EE\u9898\uFF1A\u5BF9\u79F0\u4E8C\u53C9\u6811 <a class="header-anchor" href="#\u95EE\u9898\uFF1A\u5BF9\u79F0\u4E8C\u53C9\u6811" aria-hidden="true">#</a></h1><p><a href="/guo-notes/classify/algorithm/\u57FA\u7840\u6570\u636E\u7ED3\u6784-\u54C8\u5E0C\u8868.html">\u54C8\u5E0C\u8868</a> | <a href="/guo-notes/classify/algorithm/\u57FA\u7840\u6570\u636E\u7ED3\u6784-\u94FE\u8868.html">\u94FE\u8868</a> | <a href="/guo-notes/classify/algorithm/\u6280\u5DE7-\u53CC\u6307\u9488.html">\u53CC\u6307\u9488</a> | <a href="/guo-notes/classify/algorithm/\u6570\u5B66-\u76F8\u9047\u95EE\u9898.html">\u76F8\u9047\u95EE\u9898</a></p><p>\u7ED9\u4F60\u4E00\u4E2A\u4E8C\u53C9\u6811\u7684\u6839\u8282\u70B9 <code>root</code> \uFF0C \u68C0\u67E5\u5B83\u662F\u5426\u8F74\u5BF9\u79F0\u3002</p><p><strong>\u793A\u4F8B 1\uFF1A</strong></p><p><img src="https://assets.leetcode.com/uploads/2021/02/19/symtree1.jpg" alt="img"></p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">\u8F93\u5165\uFF1Aroot = [1,2,2,3,4,4,3]</span></span>
<span class="line"><span style="color:#A6ACCD;">\u8F93\u51FA\uFF1Atrue</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u793A\u4F8B 2\uFF1A</strong></p><p><img src="https://assets.leetcode.com/uploads/2021/02/19/symtree2.jpg" alt="img"></p><div class="language- line-numbers-mode"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">\u8F93\u5165\uFF1Aroot = [1,2,2,null,3,null,3]</span></span>
<span class="line"><span style="color:#A6ACCD;">\u8F93\u51FA\uFF1Afalse</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>\u63D0\u793A\uFF1A</strong></p><ul><li>\u6811\u4E2D\u8282\u70B9\u6570\u76EE\u5728\u8303\u56F4 <code>[1, 1000]</code> \u5185</li><li><code>-100 &lt;= Node.val &lt;= 100</code></li></ul><p><strong>\u8FDB\u9636\uFF1A\u4F60\u53EF\u4EE5\u8FD0\u7528\u9012\u5F52\u548C\u8FED\u4EE3\u4E24\u79CD\u65B9\u6CD5\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\u5417\uFF1F</strong></p><h2 id="\u65B9\u6CD5\u4E00\uFF1A\u9012\u5F52" tabindex="-1">\u65B9\u6CD5\u4E00\uFF1A\u9012\u5F52 <a class="header-anchor" href="#\u65B9\u6CD5\u4E00\uFF1A\u9012\u5F52" aria-hidden="true">#</a></h2><div class="language-go line-numbers-mode"><button class="copy"></button><span class="lang">go</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for a binary tree node.</span></span>
<span class="line"><span style="color:#676E95;"> * type TreeNode struct {</span></span>
<span class="line"><span style="color:#676E95;"> *     Val int</span></span>
<span class="line"><span style="color:#676E95;"> *     Left *TreeNode</span></span>
<span class="line"><span style="color:#676E95;"> *     Right *TreeNode</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">isSymmetric</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">TreeNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">check</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Left</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> root</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Right</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">check</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">TreeNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> l </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> l </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> r </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">nil</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> l</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Val </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Val </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">false</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">check</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Left</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Right</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">check</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Right</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> r</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Left</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488" tabindex="-1">*\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488 <a class="header-anchor" href="#\u65B9\u6CD5\u4E8C\uFF1A\u5FEB\u6162\u6307\u9488" aria-hidden="true">#</a></h2><p>\u3002\u3002\u3002</p><div class="language-go line-numbers-mode"><button class="copy"></button><span class="lang">go</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for singly-linked list.</span></span>
<span class="line"><span style="color:#676E95;"> * type ListNode struct {</span></span>
<span class="line"><span style="color:#676E95;"> *     Val int</span></span>
<span class="line"><span style="color:#676E95;"> *     Next *ListNode</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hasCycle</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">head </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">ListNode</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div>`,17),o=[e];function r(c,t,D,i,y,A){return a(),n("div",null,o)}const b=s(p,[["render",r]]);export{F as __pageData,b as default};
